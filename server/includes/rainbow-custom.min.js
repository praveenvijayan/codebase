/* Rainbow v1.0 rainbowco.de | included languages: generic, javascript, html, css */
window.Rainbow=function(){function q(b){var d=b.getAttribute&&b.getAttribute("data-language")||null;if(!d){var b=b.attributes.length,c;for(c=0;c<b;++c)"data-language"==="data-language"[c].nodeName&&(d="data-language"[c].nodeValue)}return d}function C(b,d){for(var c in g[f]){c=parseInt(c,10);if(b==c&&d==g[f][c]?0:b<=c&&d>=g[f][c])delete g[f][c],delete i[f][c];if(b>=c&&b<g[f][c]||d>c&&d<g[f][c])return!0}return!1}function r(b,d){return'<span class="'+b.replace(/\./g," ")+(l?" "+l:"")+'">'+d+"</span>"}
function D(b,d){var c=0,e;for(e=1;e<d;++e)b[e]&&(c+=b[e].length);return c}function s(b,d,c,e){var k=b.exec(c);if(k){++t;!d.name&&d.matches[0]&&(d.name=d.matches[0],delete d.matches[0]);var h=k[0],j=k.index,u=k[0].length+j,m=function(){function k(){s(b,d,c,e)}t%100>0?k():setTimeout(k,0)};if(C(j,u))m();else{var n=v(d.matches),l=function(c,b,e){if(c>=b.length)e(h);else{var f=function(){l(++c,b,e)},g=k[b[c]];if(g){var j=d.matches[b[c]],i=j.language;if(i)w(g,i,function(c){h=h.replace(g,c);f()});else if(typeof j===
"object")x(g,j.length?j:[j],function(c){h=h.replace(g,c);f()});else{h=y(D(k,b[c]),g,r(j,g),h);f()}}else f()}};l(0,n,function(c){d.name&&(c=r(d.name,c));if(!i[f]){i[f]={};g[f]={}}i[f][j]={replace:k[0],"with":c};g[f][j]=u;m()})}}else e()}function E(b){var d=n[b]||[],c=n[z]||[];return A[b]?d:d.concat(c)}function y(b,d,c,e){return e.substr(0,b)+e.substr(b).replace(d,c)}function v(b){var d=[],c;for(c in b)b.hasOwnProperty(c)&&d.push(c);return d.sort(function(c,b){return b-c})}function x(b,d,c){function e(d,
h){h<d.length?s(d[h].pattern,d[h],b,function(){e(d,++h)}):F(b,function(b){delete i[f];delete g[f];--f;c(b)})}++f;e(d,0)}function F(b,d){function c(b,d,e,g){if(e<d.length){++B;var m=d[e],l=i[f][m],b=y(m,l.replace,l["with"],b),m=function(){c(b,d,++e,g)};0<B%250?m():setTimeout(m,0)}else g(b)}var e=v(i[f]);c(b,e,0,d)}function w(b,d,c){x(b,E(d),function(b){c(b)})}function o(b,d){if(d<b.length){var c=q(b[d])||q(b[d].parentNode);c?(c=c.toLowerCase(),b[d].className=c,w(b[d].innerHTML,c,function(e){b[d].innerHTML=
e;i={};g={};p&&p(b[d],c);setTimeout(function(){o(b,++d)},0)})):o(b,++d)}}var i={},g={},n={},A={},f=0,z=0,t=0,B=0,l,p;return{extend:function(b,d,c){1==arguments.length&&(d=b,b=z);A[b]=c;n[b]=d.concat(n[b]||[])},d:function(b){p=b},c:function(b){l=b},b:function(){var b=document.getElementsByTagName("pre"),d=document.getElementsByTagName("code"),c,e=[];for(c=d.length>>>0;c--;)e[c]=d[c];for(c=0;c<b.length;++c)b[c].getElementsByTagName("code").length||e.push(b[c]);o(e,0)}}}();
window.addEventListener?window.addEventListener("load",Rainbow.b,!1):window.attachEvent("onload",Rainbow.b);Rainbow.onHighlight=Rainbow.d;Rainbow.addClass=Rainbow.c;window.a=window.a||{};
Rainbow.extend([{matches:{1:{name:"keyword.operator",pattern:/\=/g},2:"string"},pattern:/(\(|\s|\[|\=)(('|")[\s\S]*?(\3))/gm},{name:"comment",pattern:/\/\*[\s\S]*?\*\/|(\/\/|\#)[\s\S]*?$/gm},{name:"integer",pattern:/\b(0x[\da-f]+|\d+)\b/g},{name:"constant",pattern:/\b[A-Z0-9_]{2,}\b/g},{matches:{1:"keyword"},pattern:/\b(and|array|as|bool(ean)?|c(atch|har|lass|onst)|d(ef|elete|ie|o(uble)?)|e(cho|lse(if)?|xit|xtends)|f(inally|loat|or(each)?|unction)|global|if|import|int(eger)?|long|new|object|or|pr(int|ivate|otected)|public|return|self|st(ring|ruct|atic)|switch|th(en|is|row)|try|(un)?signed|var|void|while)(?=\(|\b)/g},{name:"constant.language",
pattern:/true|false|null/g},{name:"keyword.operator",pattern:/\+|\!|\-|&(gt|lt|amp);|\||\*|\=/g},{matches:{1:"function.call"},pattern:/(\w+?)(?=\()/g},{matches:{1:"keyword",2:"meta.function-call"},pattern:/(function)\s(.*?)(?=\()/g}]);window.a=window.a||{};
Rainbow.extend("javascript",[{name:"selector",pattern:/\s\$(?=\.|\()/g},{name:"support",pattern:/\b(window|document)\b/g},{matches:{1:"support.property"},pattern:/\.(length|node(Name|Value))\b/g},{matches:{1:"support.function"},pattern:/(setTimeout|setInterval)(?=\()/g},{matches:{1:"support.method"},pattern:/\.(getAttribute|push|getElementById|getElementsByClassName|log|setTimeout|setInterval)(?=\()/g},{name:"constant.regex",matches:{1:"support.regex.open",2:{name:"constant.regex.escape",pattern:/\\(.){1}/g},
3:"support.regex.close",4:"support.regex.modifier"},pattern:/(\/)(.*)(\/)([igm]{0,3})/g},{name:"meta.function-call",pattern:/(\w+)(?=:\s{0,}function)/g},{matches:{2:[{name:"string",pattern:/('|")(.*?)(\1)/g},{name:"meta.script-tag",pattern:/(\w+)/g}]},pattern:/(&lt;\/?)(script(.*?))(&gt;)/g}]);window.a=window.a||{};
Rainbow.extend("html",[{name:"php",matches:{2:{language:"php"}},pattern:/&lt;\?(php)?([\s\S]*?)(\?&gt;)/gm},{name:"css",matches:{"0":{language:"css"}},pattern:/&lt;style(.*?)&gt;([\s\S]*?)&lt;\/style&gt;/gm},{name:"js",matches:{"0":{language:"javascript"}},pattern:/&lt;script(?! src)(.*?)&gt;([\s\S]*?)&lt;\/script&gt;/gm},{name:"comment.html",pattern:/&lt;\!--[\S\s]*?--&gt;/g},{matches:{1:"support.tag.open",2:"support.tag.close"},pattern:/(&lt;)|(&gt;)/g},{name:"support.tag",matches:{1:"support.tag",
2:"support.tag.special",3:"support.tag-name"},pattern:/(&lt;)(\/|\!?)(\w+)/g},{matches:{1:"support.attribute"},pattern:/([a-z-]+)(?=\=)/g},{matches:{1:"support.operator",2:"string.quote",3:"string.value",4:"string.quote"},pattern:/(=)('|")(.*?)(\2)/g},{matches:{1:"support.operator",2:"support.value"},pattern:/(=)([a-zA-Z\-0-9]*)\b/g},{name:"support.attribute",pattern:/(\w+)(?=&gt;)/g}],!0);window.a=window.a||{};
Rainbow.extend("css",[{name:"comment",pattern:/\/\*[\s\S]*?\*\//gm},{name:"constant.hex-color",pattern:/#([a-fA-F0-9]{3}|[a-fA-F0-9]{6})(?=;|\s)/g},{matches:{1:"integer",2:"keyword.px"},pattern:/(\d+)(px)/g},{name:"string",pattern:/('|")(.*?)\1/g},{name:"support.css-property",pattern:/[\w-]+(?=\s|:)(?!.*\{)/g},{matches:{1:[{name:"meta.sass",pattern:/&amp;/g},{name:"meta.class",pattern:/\.[\w\-_]+/g},{name:"meta.id",pattern:/\#[\w\-_]+/g},{name:"meta.pseudo",pattern:/:[\w\-_]+/g},{name:"meta.tag",
pattern:/\w+/g}]},pattern:/([\w\ ,:\.\#\&\;\-_]+)(?=.*\{)/g},{matches:{2:"support.vender-prefix",3:"support.value"},pattern:/(:|,)\s?(-o-|-moz-|-webkit-|-ms-)?([a-zA-Z-]*)(?=\b)(?!.*\{)/g},{matches:{1:{name:"meta.style-tag",pattern:/\w+/g}},pattern:/&lt;\/?(.*?)(?=\=|&gt;)/g}],!0);
